swagger: '2.0'
info:
  description: >-
    This is a sample server Petstore server.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key
    `special-key` to test the authorization filters.
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header
    description: >
      For accessing the API a valid JWT token must be passed in all the queries
      in

      the 'Authorization' header.  

      A valid JWT token is generated by the API and retourned as answer of a
      call

      to the route /login giving a valid user & password.  

      The following syntax must be used in the 'Authorization' header :

          Bearer xxxxxx.yyyyyyy.zzzzzz
parameters:
  path-id:
    name: id
    in: path
    required: true
    type: string
    x-example: 5ae9a74d85f4302268dd529e
paths:
  /pets/:
    get:
      tags:
        - Pets
      x-swagger-router-controller: Pets
      operationId: getPets
      description: Returns all pets from the system that the user has access to
      produces:
        - application/json
      responses:
        '200':
          description: A list of pets.
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
  '/pets/{id}':
    get:
      tags:
        - Pets
      x-swagger-router-controller: Pets
      operationId: getPetById
      description: Returns a single pet by ID
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/path-id'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
x-swagger-mongoose:
  schema-options:
    timestamps: true
definitions:
  Pet:
    type: object
    required:
      - _id
      - name
    properties:
      _id:
        type: string
      createdAt:
        type: string
        format: datetime
      updatedAt:
        type: string
        format: datetime
      deletedAt:
        type: string
        format: datetime
      deleted:
        type: boolean
      deletedBy:
        type: string
        description: id of the user who deleted the record
      name:
        type: string
      tag:
        type: string
